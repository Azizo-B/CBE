name: Publish Package to PyPI and Create GitHub Release

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  build-publish-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools build twine wheel

      - name: Extract version
        id: extract_version
        run: |
          VERSION=$(python setup.py --version)
          echo "VERSION=${VERSION}" >> $GITHUB_OUTPUT
          echo "Extracted version: ${VERSION}"

      - name: Build package
        run: |
          python -m build

      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          twine upload dist/*

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # GitHub automatically provides this token
        with:
          tag_name: ${{ steps.extract_version.outputs.VERSION }}
          release_name: Release ${{ steps.extract_version.outputs.VERSION }}
          draft: false
          prerelease: false

      - name: Upload Release Assets
        run: |
            for file in dist/*; do
              echo "Uploading $file"
              curl -s -H "Authorization: token ${{ github.token }}" \
                   -H "Accept: application/vnd.github.v3+json" \
                   -H "Content-Type: application/octet-stream" \
                   --form "name=$(basename $file)" \
                   --form "file=@$file" \
                   "${{ steps.create_release.outputs.upload_url }}?name=$(basename $file)"
              echo "Upload response for $file: $?"
            done
